# This file is autogenerated by maturin v1.1.0
# To update, run
#
#    maturin generate-ci github
#
name: python

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  # linux:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       target: [x86_64, aarch64]
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: true
  #     - name: Build wheels
  #       uses: PyO3/maturin-action@v1
  #       with:
  #         target: ${{ matrix.target }}
  #         args: --release --out dist --find-interpreter --manifest-path python/Cargo.toml
  #         sccache: 'true'
  #         manylinux: '2_28'
  #         before-script-linux:
  #           yum install -y protobuf-compiler || /bin/true
  #           apt-get update && apt-get install -y protobuf-compiler || /bin/true
  #         docker-options: -e krb5_cv_attr_constructor_destructor=yes -e ac_cv_func_regcomp=yes -e ac_cv_printf_positional=yes -e ac_cv_gssapi_supports_spnego=yes
  #     - name: Upload wheels
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: wheels
  #         path: dist

  # windows:
  #   runs-on: windows-latest
  #   strategy:
  #     matrix:
  #       target: [x64, x86]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10'
  #         architecture: ${{ matrix.target }}
  #     - name: Build wheels
  #       uses: PyO3/maturin-action@v1
  #       with:
  #         target: ${{ matrix.target }}
  #         args: --release --out dist --find-interpreter
  #         sccache: 'true'
  #     - name: Upload wheels
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: wheels
  #         path: dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install native libs
        run:
          brew install protobuf
      - name: Print env
        run:
          env | sort
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --manifest-path python/Cargo.toml
          sccache: 'true'
        env:
          CFLAGS: "--target=${{ matrix.target }}"
        #   krb5_cv_attr_constructor_destructor: "yes"
        #   ac_cv_func_regcomp: "yes"
        #   ac_cv_printf_positional: "yes"
        #   ac_cv_gssapi_supports_spnego: "yes"
        # env:
        #   BINDGEN_EXTRA_CLANG_ARGS: "-I/usr/local/include"
        #   LIBRARY_PATH: /usr/local/lib
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  # sdist:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: true
  #     - name: Build sdist
  #       uses: PyO3/maturin-action@v1
  #       with:
  #         command: sdist
  #         args: --out dist --manifest-path python/Cargo.toml
  #     - name: Upload sdist
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: wheels
  #         path: dist

  # release:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   if: "startsWith(github.ref, 'refs/tags/')"
  #   needs: [linux, windows, macos, sdist]
  #   steps:
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: wheels
  #     - name: Publish to PyPI
  #       uses: PyO3/maturin-action@v1
  #       env:
  #         MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
  #       with:
  #         command: upload
  #         args: --skip-existing *
