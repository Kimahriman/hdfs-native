name: rust-test

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - "*"

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Format
        run: cargo fmt -- --check

  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - uses: Swatinem/rust-cache@v2

      - name: build and lint with clippy
        run: cargo clippy --all-targets --features integration-test,benchmark -- -D warnings

      - name: Check docs
        run: cargo doc

      - name: Check no features
        run: cargo check --tests

      - name: Check all features
        run: cargo check --all-targets --features integration-test,benchmark

  # test-full:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os:
  #         - ubuntu-latest
  #         # - macos-latest
  #         # - windows-latest
  #   runs-on: ${{ matrix.os }}
  #   env:
  #     # Disable full debug symbol generation to speed up CI build and keep memory down
  #     # "1" means line tables only, which is useful for panic tracebacks.
  #     RUSTFLAGS: -C debuginfo=1
  #     RUST_BACKTRACE: "1"
  #     RUST_LOG: debug

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Install minimal stable with clippy and rustfmt
  #       uses: dtolnay/rust-toolchain@master
  #       with:
  #         toolchain: stable

  #     - uses: Swatinem/rust-cache@v2

  #     - uses: actions/setup-java@v4
  #       with:
  #         distribution: "temurin"
  #         java-version: "17"

  #     - name: Install native libs
  #       run: sudo apt-get install -y libkrb5-dev krb5-user

  #     - name: Download Hadoop
  #       run: |
  #         wget -q https://dlcdn.apache.org/hadoop/common/hadoop-3.4.1/hadoop-3.4.1.tar.gz
  #         tar -xf hadoop-3.4.1.tar.gz -C $GITHUB_WORKSPACE
  #         echo "$GITHUB_WORKSPACE/hadoop-3.4.1/bin" >> $GITHUB_PATH

  #     - name: Run tests
  #       run: cargo test --features integration-test

  test-simple:
    strategy:
      fail-fast: false
      matrix:
        os:
          # - ubuntu-latest
          # - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    env:
      # Disable full debug symbol generation to speed up CI build and keep memory down
      # "1" means line tables only, which is useful for panic tracebacks.
      RUSTFLAGS: -C debuginfo=1
      RUST_BACKTRACE: "1"
      RUST_LOG: debug

    steps:
      - uses: actions/checkout@v4

      - name: Install minimal stable with clippy and rustfmt
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - uses: Swatinem/rust-cache@v2

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Download Hadoop
        run: |
          Invoke-WebRequest -Uri https://dlcdn.apache.org/hadoop/common/hadoop-3.4.1/hadoop-3.4.1-lean.tar.gz -OutFile hadoop-3.4.1.tar.gz
          tar -xf hadoop-3.4.1.tar.gz -C $env:GITHUB_WORKSPACE
          echo "HADOOP_HOME=$env:GITHUB_WORKSPACE\hadoop-3.4.1" >> $env:GITHUB_ENV
          touch $env:GITHUB_WORKSPACE\hadoop-3.4.1\bin\winutils.exe
          ls $env:GITHUB_WORKSPACE\hadoop-3.4.1\bin

      - name: Run tests
        run: cargo test --features integration-test test_basic_non_ha
